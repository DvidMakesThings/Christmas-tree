
Christmas_Tree_2.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000003e6  0000047a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003e6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800106  00800106  00000480  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000480  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000004f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3f  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000073a  00000000  00000000  0000116f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000478  00000000  00000000  000018a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00001d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000405  00000000  00000000  00001d88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004c1  00000000  00000000  0000218d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000264e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d2 e0       	ldi	r29, 0x02	; 2
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e6 ee       	ldi	r30, 0xE6	; 230
  48:	f3 e0       	ldi	r31, 0x03	; 3
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a6 30       	cpi	r26, 0x06	; 6
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	a6 e0       	ldi	r26, 0x06	; 6
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a7 30       	cpi	r26, 0x07	; 7
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	a3 d0       	rcall	.+326    	; 0x1ae <main>
  68:	bc c1       	rjmp	.+888    	; 0x3e2 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <clearAll>:
}



void clearAll (){
	LEDGROUP1 = 0x00;
  6c:	18 b8       	out	0x08, r1	; 8
	LEDGROUP2 = 0x00;
  6e:	1b b8       	out	0x0b, r1	; 11
  70:	08 95       	ret

00000072 <exitPattern>:
	return 0;
}

void exitPattern (){
	clearAll();
  72:	fc df       	rcall	.-8      	; 0x6c <clearAll>
  74:	86 e0       	ldi	r24, 0x06	; 6
	for (uint8_t i = 0; i < 6; i++){
		LEDGROUP1 = 0b00001000;
  76:	98 e0       	ldi	r25, 0x08	; 8
  78:	98 b9       	out	0x08, r25	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7a:	ef e4       	ldi	r30, 0x4F	; 79
  7c:	f3 ec       	ldi	r31, 0xC3	; 195
  7e:	31 97       	sbiw	r30, 0x01	; 1
  80:	f1 f7       	brne	.-4      	; 0x7e <exitPattern+0xc>
  82:	00 c0       	rjmp	.+0      	; 0x84 <exitPattern+0x12>
  84:	00 00       	nop
		_delay_ms(200);
		LEDGROUP1 = 0b00000000;
  86:	18 b8       	out	0x08, r1	; 8
  88:	ef e4       	ldi	r30, 0x4F	; 79
  8a:	f3 ec       	ldi	r31, 0xC3	; 195
  8c:	31 97       	sbiw	r30, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <exitPattern+0x1a>
  90:	00 c0       	rjmp	.+0      	; 0x92 <exitPattern+0x20>
  92:	00 00       	nop
  94:	81 50       	subi	r24, 0x01	; 1
	return 0;
}

void exitPattern (){
	clearAll();
	for (uint8_t i = 0; i < 6; i++){
  96:	81 f7       	brne	.-32     	; 0x78 <exitPattern+0x6>
		LEDGROUP1 = 0b00001000;
		_delay_ms(200);
		LEDGROUP1 = 0b00000000;
		_delay_ms(200);
	}
	clearAll();
  98:	e9 df       	rcall	.-46     	; 0x6c <clearAll>
  9a:	08 95       	ret

0000009c <startPattern>:
}

void startPattern (){
	uint8_t delayTime = 100;
	LEDGROUP1 = 0b00000001;
  9c:	51 e0       	ldi	r21, 0x01	; 1
  9e:	58 b9       	out	0x08, r21	; 8
  a0:	87 ea       	ldi	r24, 0xA7	; 167
  a2:	91 e6       	ldi	r25, 0x61	; 97
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <startPattern+0x8>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <startPattern+0xe>
  aa:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP1 = 0b00000011;
  ac:	43 e0       	ldi	r20, 0x03	; 3
  ae:	48 b9       	out	0x08, r20	; 8
  b0:	e7 ea       	ldi	r30, 0xA7	; 167
  b2:	f1 e6       	ldi	r31, 0x61	; 97
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <startPattern+0x18>
  b8:	00 c0       	rjmp	.+0      	; 0xba <startPattern+0x1e>
  ba:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP1 = 0b00000111;
  bc:	37 e0       	ldi	r19, 0x07	; 7
  be:	38 b9       	out	0x08, r19	; 8
  c0:	87 ea       	ldi	r24, 0xA7	; 167
  c2:	91 e6       	ldi	r25, 0x61	; 97
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <startPattern+0x28>
  c8:	00 c0       	rjmp	.+0      	; 0xca <startPattern+0x2e>
  ca:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP1 = 0b00001111;
  cc:	2f e0       	ldi	r18, 0x0F	; 15
  ce:	28 b9       	out	0x08, r18	; 8
  d0:	e7 ea       	ldi	r30, 0xA7	; 167
  d2:	f1 e6       	ldi	r31, 0x61	; 97
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <startPattern+0x38>
  d8:	00 c0       	rjmp	.+0      	; 0xda <startPattern+0x3e>
  da:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP1 = 0b00011111;
  dc:	9f e1       	ldi	r25, 0x1F	; 31
  de:	98 b9       	out	0x08, r25	; 8
  e0:	e7 ea       	ldi	r30, 0xA7	; 167
  e2:	f1 e6       	ldi	r31, 0x61	; 97
  e4:	31 97       	sbiw	r30, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <startPattern+0x48>
  e8:	00 c0       	rjmp	.+0      	; 0xea <startPattern+0x4e>
  ea:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP1 = 0b00111111;
  ec:	8f e3       	ldi	r24, 0x3F	; 63
  ee:	88 b9       	out	0x08, r24	; 8
  f0:	e7 ea       	ldi	r30, 0xA7	; 167
  f2:	f1 e6       	ldi	r31, 0x61	; 97
  f4:	31 97       	sbiw	r30, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <startPattern+0x58>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <startPattern+0x5e>
  fa:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b00000001;
  fc:	5b b9       	out	0x0b, r21	; 11
  fe:	e7 ea       	ldi	r30, 0xA7	; 167
 100:	f1 e6       	ldi	r31, 0x61	; 97
 102:	31 97       	sbiw	r30, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <startPattern+0x66>
 106:	00 c0       	rjmp	.+0      	; 0x108 <startPattern+0x6c>
 108:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b00000011;
 10a:	4b b9       	out	0x0b, r20	; 11
 10c:	e7 ea       	ldi	r30, 0xA7	; 167
 10e:	f1 e6       	ldi	r31, 0x61	; 97
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <startPattern+0x74>
 114:	00 c0       	rjmp	.+0      	; 0x116 <startPattern+0x7a>
 116:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b00000111;
 118:	3b b9       	out	0x0b, r19	; 11
 11a:	e7 ea       	ldi	r30, 0xA7	; 167
 11c:	f1 e6       	ldi	r31, 0x61	; 97
 11e:	31 97       	sbiw	r30, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <startPattern+0x82>
 122:	00 c0       	rjmp	.+0      	; 0x124 <startPattern+0x88>
 124:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b00001111;
 126:	2b b9       	out	0x0b, r18	; 11
 128:	e7 ea       	ldi	r30, 0xA7	; 167
 12a:	f1 e6       	ldi	r31, 0x61	; 97
 12c:	31 97       	sbiw	r30, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <startPattern+0x90>
 130:	00 c0       	rjmp	.+0      	; 0x132 <startPattern+0x96>
 132:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b00011111;
 134:	9b b9       	out	0x0b, r25	; 11
 136:	e7 ea       	ldi	r30, 0xA7	; 167
 138:	f1 e6       	ldi	r31, 0x61	; 97
 13a:	31 97       	sbiw	r30, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <startPattern+0x9e>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <startPattern+0xa4>
 140:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b00111111;
 142:	8b b9       	out	0x0b, r24	; 11
 144:	87 ea       	ldi	r24, 0xA7	; 167
 146:	91 e6       	ldi	r25, 0x61	; 97
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <startPattern+0xac>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <startPattern+0xb2>
 14e:	00 00       	nop
	_delay_ms(delayTime);
	LEDGROUP2 = 0b01111111;
 150:	8f e7       	ldi	r24, 0x7F	; 127
 152:	8b b9       	out	0x0b, r24	; 11
 154:	e7 ea       	ldi	r30, 0xA7	; 167
 156:	f1 e6       	ldi	r31, 0x61	; 97
 158:	31 97       	sbiw	r30, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <startPattern+0xbc>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <startPattern+0xc2>
 15e:	00 00       	nop
	_delay_ms(delayTime);
	clearAll();
 160:	85 df       	rcall	.-246    	; 0x6c <clearAll>
 162:	08 95       	ret

00000164 <checkState>:
		}
    }
}

void checkState (){
	if ((TAP_PIN & TAP_BIT == 1) && (cnt == 1)){
 164:	18 9b       	sbis	0x03, 0	; 3
 166:	09 c0       	rjmp	.+18     	; 0x17a <checkState+0x16>
 168:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <cnt>
 16c:	81 30       	cpi	r24, 0x01	; 1
 16e:	29 f4       	brne	.+10     	; 0x17a <checkState+0x16>
		startPattern();
 170:	95 df       	rcall	.-214    	; 0x9c <startPattern>
		cnt = 2;
 172:	82 e0       	ldi	r24, 0x02	; 2
 174:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <cnt>
		}
    }
}

void checkState (){
	if ((TAP_PIN & TAP_BIT == 1) && (cnt == 1)){
 178:	08 95       	ret
		startPattern();
		cnt = 2;
	}
	else if ((TAP_PIN & TAP_BIT == 1) && (cnt == 2)){
 17a:	18 9b       	sbis	0x03, 0	; 3
 17c:	17 c0       	rjmp	.+46     	; 0x1ac <checkState+0x48>
 17e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <cnt>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	99 f4       	brne	.+38     	; 0x1ac <checkState+0x48>
 186:	2f e3       	ldi	r18, 0x3F	; 63
 188:	8d e0       	ldi	r24, 0x0D	; 13
 18a:	93 e0       	ldi	r25, 0x03	; 3
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <checkState+0x28>
 194:	00 c0       	rjmp	.+0      	; 0x196 <checkState+0x32>
 196:	00 00       	nop
		_delay_ms(1000);
		if ((TAP_PIN & TAP_BIT == 1) && (cnt == 2)){
 198:	18 9b       	sbis	0x03, 0	; 3
 19a:	08 c0       	rjmp	.+16     	; 0x1ac <checkState+0x48>
 19c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <cnt>
 1a0:	82 30       	cpi	r24, 0x02	; 2
 1a2:	21 f4       	brne	.+8      	; 0x1ac <checkState+0x48>
			exitPattern();
 1a4:	66 df       	rcall	.-308    	; 0x72 <exitPattern>
			cnt = 1;
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <cnt>
 1ac:	08 95       	ret

000001ae <main>:
uint8_t deviceOn = 0;
uint8_t oldState = 0;
uint8_t cnt = 1;

int main(void){
    DDRC = GROUP1_PATTERN;
 1ae:	8f e3       	ldi	r24, 0x3F	; 63
 1b0:	87 b9       	out	0x07, r24	; 7
	DDRD = GROUP2_PATTERN;
 1b2:	8f e7       	ldi	r24, 0x7F	; 127
 1b4:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0x00;
 1b6:	14 b8       	out	0x04, r1	; 4
	PORTB = 0x00;
 1b8:	15 b8       	out	0x05, r1	; 5
	
    while (1){
		
		checkState();
 1ba:	d4 df       	rcall	.-88     	; 0x164 <checkState>
		
		while (cnt == 2){
 1bc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <cnt>
 1c0:	82 30       	cpi	r24, 0x02	; 2
 1c2:	d9 f7       	brne	.-10     	; 0x1ba <main+0xc>
			pattern = random();
 1c4:	60 d0       	rcall	.+192    	; 0x286 <random>
 1c6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
			LEDGROUP1 = GROUP1_PATTERN & pattern;
 1ca:	8f 73       	andi	r24, 0x3F	; 63
 1cc:	88 b9       	out	0x08, r24	; 8
			pattern = random();
 1ce:	5b d0       	rcall	.+182    	; 0x286 <random>
 1d0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
			LEDGROUP2 = GROUP2_PATTERN & pattern;
 1d4:	8f 77       	andi	r24, 0x7F	; 127
 1d6:	8b b9       	out	0x0b, r24	; 11
			checkState();
 1d8:	c5 df       	rcall	.-118    	; 0x164 <checkState>
 1da:	2f e3       	ldi	r18, 0x3F	; 63
 1dc:	8d e0       	ldi	r24, 0x0D	; 13
 1de:	93 e0       	ldi	r25, 0x03	; 3
 1e0:	21 50       	subi	r18, 0x01	; 1
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x32>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x3c>
 1ea:	00 00       	nop
	
    while (1){
		
		checkState();
		
		while (cnt == 2){
 1ec:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <cnt>
 1f0:	82 30       	cpi	r24, 0x02	; 2
 1f2:	41 f3       	breq	.-48     	; 0x1c4 <main+0x16>
 1f4:	e2 cf       	rjmp	.-60     	; 0x1ba <main+0xc>

000001f6 <random_r>:
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	ec 01       	movw	r28, r24
 20c:	68 81       	ld	r22, Y
 20e:	79 81       	ldd	r23, Y+1	; 0x01
 210:	8a 81       	ldd	r24, Y+2	; 0x02
 212:	9b 81       	ldd	r25, Y+3	; 0x03
 214:	61 15       	cp	r22, r1
 216:	71 05       	cpc	r23, r1
 218:	81 05       	cpc	r24, r1
 21a:	91 05       	cpc	r25, r1
 21c:	21 f4       	brne	.+8      	; 0x226 <random_r+0x30>
 21e:	64 e2       	ldi	r22, 0x24	; 36
 220:	79 ed       	ldi	r23, 0xD9	; 217
 222:	8b e5       	ldi	r24, 0x5B	; 91
 224:	97 e0       	ldi	r25, 0x07	; 7
 226:	2d e1       	ldi	r18, 0x1D	; 29
 228:	33 ef       	ldi	r19, 0xF3	; 243
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	7f d0       	rcall	.+254    	; 0x32e <__divmodsi4>
 230:	49 01       	movw	r8, r18
 232:	5a 01       	movw	r10, r20
 234:	9b 01       	movw	r18, r22
 236:	ac 01       	movw	r20, r24
 238:	a7 ea       	ldi	r26, 0xA7	; 167
 23a:	b1 e4       	ldi	r27, 0x41	; 65
 23c:	94 d0       	rcall	.+296    	; 0x366 <__muluhisi3>
 23e:	6b 01       	movw	r12, r22
 240:	7c 01       	movw	r14, r24
 242:	ac ee       	ldi	r26, 0xEC	; 236
 244:	b4 ef       	ldi	r27, 0xF4	; 244
 246:	a5 01       	movw	r20, r10
 248:	94 01       	movw	r18, r8
 24a:	99 d0       	rcall	.+306    	; 0x37e <__mulohisi3>
 24c:	dc 01       	movw	r26, r24
 24e:	cb 01       	movw	r24, r22
 250:	8c 0d       	add	r24, r12
 252:	9d 1d       	adc	r25, r13
 254:	ae 1d       	adc	r26, r14
 256:	bf 1d       	adc	r27, r15
 258:	b7 ff       	sbrs	r27, 7
 25a:	03 c0       	rjmp	.+6      	; 0x262 <random_r+0x6c>
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	a1 09       	sbc	r26, r1
 260:	b0 48       	sbci	r27, 0x80	; 128
 262:	88 83       	st	Y, r24
 264:	99 83       	std	Y+1, r25	; 0x01
 266:	aa 83       	std	Y+2, r26	; 0x02
 268:	bb 83       	std	Y+3, r27	; 0x03
 26a:	bc 01       	movw	r22, r24
 26c:	cd 01       	movw	r24, r26
 26e:	9f 77       	andi	r25, 0x7F	; 127
 270:	df 91       	pop	r29
 272:	cf 91       	pop	r28
 274:	ff 90       	pop	r15
 276:	ef 90       	pop	r14
 278:	df 90       	pop	r13
 27a:	cf 90       	pop	r12
 27c:	bf 90       	pop	r11
 27e:	af 90       	pop	r10
 280:	9f 90       	pop	r9
 282:	8f 90       	pop	r8
 284:	08 95       	ret

00000286 <random>:
 286:	8f 92       	push	r8
 288:	9f 92       	push	r9
 28a:	af 92       	push	r10
 28c:	bf 92       	push	r11
 28e:	cf 92       	push	r12
 290:	df 92       	push	r13
 292:	ef 92       	push	r14
 294:	ff 92       	push	r15
 296:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 29a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
 29e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_start+0x2>
 2a2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_start+0x3>
 2a6:	61 15       	cp	r22, r1
 2a8:	71 05       	cpc	r23, r1
 2aa:	81 05       	cpc	r24, r1
 2ac:	91 05       	cpc	r25, r1
 2ae:	21 f4       	brne	.+8      	; 0x2b8 <random+0x32>
 2b0:	64 e2       	ldi	r22, 0x24	; 36
 2b2:	79 ed       	ldi	r23, 0xD9	; 217
 2b4:	8b e5       	ldi	r24, 0x5B	; 91
 2b6:	97 e0       	ldi	r25, 0x07	; 7
 2b8:	2d e1       	ldi	r18, 0x1D	; 29
 2ba:	33 ef       	ldi	r19, 0xF3	; 243
 2bc:	41 e0       	ldi	r20, 0x01	; 1
 2be:	50 e0       	ldi	r21, 0x00	; 0
 2c0:	36 d0       	rcall	.+108    	; 0x32e <__divmodsi4>
 2c2:	49 01       	movw	r8, r18
 2c4:	5a 01       	movw	r10, r20
 2c6:	9b 01       	movw	r18, r22
 2c8:	ac 01       	movw	r20, r24
 2ca:	a7 ea       	ldi	r26, 0xA7	; 167
 2cc:	b1 e4       	ldi	r27, 0x41	; 65
 2ce:	4b d0       	rcall	.+150    	; 0x366 <__muluhisi3>
 2d0:	6b 01       	movw	r12, r22
 2d2:	7c 01       	movw	r14, r24
 2d4:	ac ee       	ldi	r26, 0xEC	; 236
 2d6:	b4 ef       	ldi	r27, 0xF4	; 244
 2d8:	a5 01       	movw	r20, r10
 2da:	94 01       	movw	r18, r8
 2dc:	50 d0       	rcall	.+160    	; 0x37e <__mulohisi3>
 2de:	dc 01       	movw	r26, r24
 2e0:	cb 01       	movw	r24, r22
 2e2:	8c 0d       	add	r24, r12
 2e4:	9d 1d       	adc	r25, r13
 2e6:	ae 1d       	adc	r26, r14
 2e8:	bf 1d       	adc	r27, r15
 2ea:	b7 ff       	sbrs	r27, 7
 2ec:	03 c0       	rjmp	.+6      	; 0x2f4 <random+0x6e>
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	a1 09       	sbc	r26, r1
 2f2:	b0 48       	sbci	r27, 0x80	; 128
 2f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 2fc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 300:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 304:	bc 01       	movw	r22, r24
 306:	cd 01       	movw	r24, r26
 308:	9f 77       	andi	r25, 0x7F	; 127
 30a:	ff 90       	pop	r15
 30c:	ef 90       	pop	r14
 30e:	df 90       	pop	r13
 310:	cf 90       	pop	r12
 312:	bf 90       	pop	r11
 314:	af 90       	pop	r10
 316:	9f 90       	pop	r9
 318:	8f 90       	pop	r8
 31a:	08 95       	ret

0000031c <srandom>:
 31c:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 320:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 324:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 328:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 32c:	08 95       	ret

0000032e <__divmodsi4>:
 32e:	05 2e       	mov	r0, r21
 330:	97 fb       	bst	r25, 7
 332:	16 f4       	brtc	.+4      	; 0x338 <__divmodsi4+0xa>
 334:	00 94       	com	r0
 336:	0f d0       	rcall	.+30     	; 0x356 <__negsi2>
 338:	57 fd       	sbrc	r21, 7
 33a:	05 d0       	rcall	.+10     	; 0x346 <__divmodsi4_neg2>
 33c:	24 d0       	rcall	.+72     	; 0x386 <__udivmodsi4>
 33e:	07 fc       	sbrc	r0, 7
 340:	02 d0       	rcall	.+4      	; 0x346 <__divmodsi4_neg2>
 342:	46 f4       	brtc	.+16     	; 0x354 <__divmodsi4_exit>
 344:	08 c0       	rjmp	.+16     	; 0x356 <__negsi2>

00000346 <__divmodsi4_neg2>:
 346:	50 95       	com	r21
 348:	40 95       	com	r20
 34a:	30 95       	com	r19
 34c:	21 95       	neg	r18
 34e:	3f 4f       	sbci	r19, 0xFF	; 255
 350:	4f 4f       	sbci	r20, 0xFF	; 255
 352:	5f 4f       	sbci	r21, 0xFF	; 255

00000354 <__divmodsi4_exit>:
 354:	08 95       	ret

00000356 <__negsi2>:
 356:	90 95       	com	r25
 358:	80 95       	com	r24
 35a:	70 95       	com	r23
 35c:	61 95       	neg	r22
 35e:	7f 4f       	sbci	r23, 0xFF	; 255
 360:	8f 4f       	sbci	r24, 0xFF	; 255
 362:	9f 4f       	sbci	r25, 0xFF	; 255
 364:	08 95       	ret

00000366 <__muluhisi3>:
 366:	31 d0       	rcall	.+98     	; 0x3ca <__umulhisi3>
 368:	a5 9f       	mul	r26, r21
 36a:	90 0d       	add	r25, r0
 36c:	b4 9f       	mul	r27, r20
 36e:	90 0d       	add	r25, r0
 370:	a4 9f       	mul	r26, r20
 372:	80 0d       	add	r24, r0
 374:	91 1d       	adc	r25, r1
 376:	11 24       	eor	r1, r1
 378:	08 95       	ret

0000037a <__mulshisi3>:
 37a:	b7 ff       	sbrs	r27, 7
 37c:	f4 cf       	rjmp	.-24     	; 0x366 <__muluhisi3>

0000037e <__mulohisi3>:
 37e:	f3 df       	rcall	.-26     	; 0x366 <__muluhisi3>
 380:	82 1b       	sub	r24, r18
 382:	93 0b       	sbc	r25, r19
 384:	08 95       	ret

00000386 <__udivmodsi4>:
 386:	a1 e2       	ldi	r26, 0x21	; 33
 388:	1a 2e       	mov	r1, r26
 38a:	aa 1b       	sub	r26, r26
 38c:	bb 1b       	sub	r27, r27
 38e:	fd 01       	movw	r30, r26
 390:	0d c0       	rjmp	.+26     	; 0x3ac <__udivmodsi4_ep>

00000392 <__udivmodsi4_loop>:
 392:	aa 1f       	adc	r26, r26
 394:	bb 1f       	adc	r27, r27
 396:	ee 1f       	adc	r30, r30
 398:	ff 1f       	adc	r31, r31
 39a:	a2 17       	cp	r26, r18
 39c:	b3 07       	cpc	r27, r19
 39e:	e4 07       	cpc	r30, r20
 3a0:	f5 07       	cpc	r31, r21
 3a2:	20 f0       	brcs	.+8      	; 0x3ac <__udivmodsi4_ep>
 3a4:	a2 1b       	sub	r26, r18
 3a6:	b3 0b       	sbc	r27, r19
 3a8:	e4 0b       	sbc	r30, r20
 3aa:	f5 0b       	sbc	r31, r21

000003ac <__udivmodsi4_ep>:
 3ac:	66 1f       	adc	r22, r22
 3ae:	77 1f       	adc	r23, r23
 3b0:	88 1f       	adc	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	1a 94       	dec	r1
 3b6:	69 f7       	brne	.-38     	; 0x392 <__udivmodsi4_loop>
 3b8:	60 95       	com	r22
 3ba:	70 95       	com	r23
 3bc:	80 95       	com	r24
 3be:	90 95       	com	r25
 3c0:	9b 01       	movw	r18, r22
 3c2:	ac 01       	movw	r20, r24
 3c4:	bd 01       	movw	r22, r26
 3c6:	cf 01       	movw	r24, r30
 3c8:	08 95       	ret

000003ca <__umulhisi3>:
 3ca:	a2 9f       	mul	r26, r18
 3cc:	b0 01       	movw	r22, r0
 3ce:	b3 9f       	mul	r27, r19
 3d0:	c0 01       	movw	r24, r0
 3d2:	a3 9f       	mul	r26, r19
 3d4:	01 d0       	rcall	.+2      	; 0x3d8 <__umulhisi3+0xe>
 3d6:	b2 9f       	mul	r27, r18
 3d8:	70 0d       	add	r23, r0
 3da:	81 1d       	adc	r24, r1
 3dc:	11 24       	eor	r1, r1
 3de:	91 1d       	adc	r25, r1
 3e0:	08 95       	ret

000003e2 <_exit>:
 3e2:	f8 94       	cli

000003e4 <__stop_program>:
 3e4:	ff cf       	rjmp	.-2      	; 0x3e4 <__stop_program>
